#!/usr/bin/env sh
#
# git-shelf -- Better workflow for storing temporary changes
#
# To report bugs, request features, or contribute:
# https://github.com/git-scripts/library
#
# Copyright 2017 @git-scripts
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Exit if a `git` command doesn't exist in the user's PATH or
# if we're not in a git repository. This is useful to keep
# in case the script is ran directly, instead of through the git CLI.
if  ! command -v git &> /dev/null ||
    ! command git rev-parse --git-dir &> /dev/null;
    then exit; fi


# Get the branch name. Defaults to master
# This needs to be checked against detached heads
branchName=$(git rev-parse --abbrev-ref --verify --quiet HEAD 2>&1 || echo "master")


# Commit locally and store the sha-1
amend=""
force=""
if command git config --get branch.$branchName.shelf &> /dev/null; then
    amend="--amend"
    force="--force"
fi

# Proceed only if we can successfully create a commit.
# Failing this means the user doesn't have anything to shelf,
# and should instead simply run `git push`.
git add -A
if command git -c commit.gpgsign=false commit $amend -m "SHELF"; then
    # Update the shelf status for the branch
    git config branch.$branchName.shelf true

    # Create the shelf branch on the remote
    # and update the shelf configuration key if successful
    user=$(git config --get user.email)
    git push origin $force $branchName:shelf/$user/$branchName && \
    git config --local branch.$branchName.shelf true
fi
